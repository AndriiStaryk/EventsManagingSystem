@model EventVM

@{
    Layout = "_Layout";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
    <style>
        .details-container {
            display: flex;
            height: 400px;
            margin-bottom: 30px;
        }

        .image-container {
            width: 300px; /* Fixed width */
            height: 400px; /* Fixed height */
            overflow: hidden; /* Hide overflow to crop images */
            position: relative; /* Needed for positioning the image */
            border-radius: 10px; /* Optional: Add rounded corners */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional: Add shadow for depth */
            margin-right: 20px; /* Space between image and info */
        }

        .image-container img {
            width: 100%; /* Make image fill the container width */
            height: 100%; /* Make image fill the container height */
            object-fit: cover; /* Crop image while maintaining aspect ratio */
            position: absolute; /* Positioning the image */
            top: 50%; /* Center vertically */
            left: 50%; /* Center horizontally */
            transform: translate(-50%, -50%); /* Adjust position */
        }

        .info-container {
            flex: 1; /* Take remaining space */
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            justify-content: space-between; /* Space between items in info section */
        }

        .info-section {
            flex: 1; /* Allow the info section to grow */
        }

        .info-container h4 {
            margin-bottom: 15px;
        }

        .info-container p {
            margin: 10px 0;
            font-size: 1.1rem;
        }

        .map-container {
            height: 200px; /* Fixed height for the map */
            border-radius: 10px;
            overflow: hidden; /* Hide overflow to crop map */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional: Add shadow for depth */
        }

        .creators-list, .participants-list {
            display: flex;
            gap: 10px; /* Space between avatars */
            margin-top: 10px;
        }

        .person {
            display: flex;
            flex-direction: column;
            align-items: center; /* Center items horizontally */
            cursor: pointer; /* Indicate clickable */
        }

        .avatar {
            width: 50px; /* Set width for circular avatar */
            height: 50px; /* Set height for circular avatar */
            border-radius: 50%; /* Make the avatar circular */
            object-fit: cover; /* Maintain aspect ratio */
            border: 2px solid #007bff; /* Optional: Add border color */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Optional: Add shadow for depth */
        }

        .person p {
            margin-top: 5px; /* Space between avatar and name */
            font-size: 0.9rem; /* Adjust font size for names */
            text-align: center; /* Center the name text */
        }

    </style>
</head>
<body>

    <div class="details-container">
        
        <div class="image-container">
            @if (Model?.Event.Image != null)
            {
                <img src="data:image;base64,@Convert.ToBase64String(Model.Event.Image)" alt="Event Image" />
            }
            else
            {
                <p>No image available for this event.</p>
            }
        </div>

       
        <div class="info-container">
            <div class="info-section">
                <h4>@Html.DisplayFor(model => model.Event.Name)</h4>
                <p><strong>Description:</strong> @Html.DisplayFor(model => model.Event.Description)</p>
                <p><strong>Date:</strong> @Html.DisplayFor(model => model.Event.EventDate)</p>
                <p><strong>Duration:</strong> @Html.DisplayFor(model => model.Event.Duration) hours</p>
                <p><strong>Location:</strong> @Model.Location.Address</p>
            </div>

          
            <div id="map" class="map-container"></div>
        </div>
    </div>


    <div class="creators">
        <h5>Creators:</h5>
        <div class="creators-list">
            @foreach (var creator in Model.Creators)
            {
                <div class="person" onclick="redirectToUserDetail('@creator.Id')">
                    <img src="data:image;base64,@Convert.ToBase64String(creator.Avatar)" alt="@creator.Name's Avatar" class="avatar" />
                    <p>@creator.Name</p>
                </div>
            }
        </div>
    </div>

    <div class="participants">
        <h5>Participants:</h5>
        <div class="participants-list">
            @foreach (var participant in Model.Participants)
            {
                <div class="person" onclick="redirectToUserDetail('@participant.Id')">
                    <img src="data:image;base64,@Convert.ToBase64String(participant.Avatar)" alt="@participant.Name's Avatar" class="avatar" />
                    <p>@participant.Name</p>
                </div>
            }
        </div>
    </div>
    

    <div class="mt-3">
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>

    
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

    <script>
        var latitude = @Model.Location.Latitude;
        var longitude = @Model.Location.Longitude;

       
        var map = L.map('map').setView([latitude, longitude], 13);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        
        L.marker([latitude, longitude]).addTo(map)
            .bindPopup('<b>@Html.DisplayFor(model => model.Event.Name)</b><br>@Model.Location.Address')
            .openPopup();


        function redirectToUserDetail(userId) {
            window.location.href = `/Users/Details/${userId}`;
        }

    </script>

</body>
</html>
